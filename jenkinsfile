pipeline {
    agent any

    environment {
        IMAGE_NAME = "user-app"
        IMAGE_TAG = "v1"
    }

    tools {
        maven 'Maven_3.9.11'
        jdk 'JDK-17'
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/navaneethan0312/user-app.git'
            }
        }

        stage('Build Maven') {
            steps {
                sh 'mvn compile'
                sh 'mvn package -DskipTests'
            }
        }

        stage('Build Docker in Minikube') {
            steps {
                sh '''
                    eval $(minikube docker-env)
                    docker build -t ${IMAGE_NAME}:${IMAGE_TAG} .
                '''
            }
        }

        stage('Deploy') {
            steps {
                sh '''
                    # Use Minikube kubectl to avoid cert issues
                    minikube kubectl -- apply -f kubernetes/mysql-deployment.yaml
                    minikube kubectl -- apply -f kubernetes/mysql-service.yaml
                    minikube kubectl -- wait --for=condition=ready pod -l app=mysql --timeout=120s

                    minikube kubectl -- apply -f kubernetes/backend-deployment.yaml
                    minikube kubectl -- apply -f kubernetes/backend-service.yaml
                    minikube kubectl -- rollout status deployment/backend-deployment
                '''
            }
        }

        stage('Verify') {
            steps {
                sh 'minikube kubectl -- get pods'
                sh 'minikube kubectl -- get svc'
                sh 'minikube service backend-service --url'
            }
        }
    }

    post {
        always {
            sh 'docker ps -a'
        }
    }
}
